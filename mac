#!/usr/bin/env sh

successfully() {
  $* || (echo "failed" 1>&2 && exit 1)
}

echo "Checking for SSH key, generating one if it doesn't exist ..."
  [[ -f ~/.ssh/id_rsa.pub ]] || ssh-keygen -t rsa

echo "Copying public key to clipboard. Paste it into your Github account ..."
  [[ -f ~/.ssh/id_rsa.pub ]] && cat ~/.ssh/id_rsa.pub | pbcopy
  successfully open https://github.com/account/ssh

echo "Installing Homebrew, a good OS X package manager ..."
  successfully ruby <(curl -fsS https://raw.github.com/mxcl/homebrew/go)
  successfully brew update

echo "Fixing permissions ..."
  successfully sudo chown -R `whoami` /usr/local

echo "Putting Homebrew location earlier in PATH ..."
  successfully echo "
  # recommended by brew doctor
  export PATH='/usr/local/bin:$PATH'" >> ~/.zshenv
  successfully source ~/.zshenv

echo "Installing GNU Compiler Collection and dependencies ..."
  successfully brew tap homebrew/dupes
  successfully brew install autoconf automake apple-gcc42

echo "Installing libksba, recommended for Ruby 1.9.3 ..."
  successfully brew install libksba

echo "Installing MongoDB 2.2 and adding it to Startup."
   brew install mongodb
   ln -s /usr/local/opt/mongodb/*.plist ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist
   launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist

echo "Installing MySQL and adding it to Startup."
   brew install mysql

echo "Setting MySQL temp databases and run as YOUR User Account"
   unset TMPDIR
   mysql_install_db --verbose --user=`whoami` --basedir="$(brew --prefix mysql)" --datadir=/usr/local/var/mysql --tmpdir=/tmp

echo "Setting MySQL to start at boot"
   cp /usr/local/Cellar/mysql/5.5.27/homebrew.mxcl.mysql.plist ~/Library/LaunchAgents/
   launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist

echo "Installing RVM (Ruby Version Manager) and Ruby 1.9.3, which becomes the default ..."
   curl -L https://get.rvm.io | bash -s latest-1.16 --auto
   source ~/.bash_profile
   command rvm install ruby -j 3
   command rvm reload

echo "Installing Postgres, a good open source relational database ..."
  successfully brew install postgres --no-python

echo "Installing Git"
   brew install git

echo "Homebrew is installing ack, ctags-exuberant, macvim, markdown, proctools and wget"
for app in ack ctags-exuberant macvim markdown proctools wget; do
  brew list $app > /dev/null
  if [[ "$?" -eq "1" ]]; then
    brew install $app
  fi
done

echo "Installing tmux, a good way to save project state and switch between projects ..."
  successfully brew install tmux
  curl -s https://raw.github.com/esparkman/PairMeUp/master/.tmux.conf -o ~/.tmux.conf

echo "Installing reattach-to-user-namespace, for copy-paste and RubyMotion compatibility with tmux ..."
  successfully brew install reattach-to-user-namespace

echo "Install Tmuxinator"
   rvm use 1.9.3 --default
   gem install tmuxinator
   mkdir ~/.tmuxinator
   curl -s https://raw.github.com/esparkman/PairMeUp/master/corndog.yml -o ~/.tmuxinator/corndog.yml
   echo 'export EDITOR= /usr/bin/vim' >> ~/.bash_profile

echo 'Checking that your system is ready for tmuxinator'
   tmuxinator doctor
   echo '[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator' >> ~/.bash_profile

echo 'Adding Alias for PairMeup'
   echo "alias pairme='. ~/pair_me_up.sh'" >> ~/.bash_profile

echo 'Your pairing environment should be configured. Launching PairMeUp! (You need to source .bash_profile)'
   curl -s https://raw.github.com/esparkman/PairMeUp/master/pair_me_up.sh -o ~/pair_me_up.sh
   source ~/.bash_profile

echo "Installing ImageMagick, good for cropping and re-sizing images ..."
  successfully brew install imagemagick

echo "Installing QT, used by Capybara Webkit for headless Javascript integration testing ..."
  successfully brew install qt

echo "Installing critical Ruby gems for Rails development ..."
  successfully gem install bundler rails heroku pg foreman thin --no-rdoc --no-ri
